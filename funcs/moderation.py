

from files.support import *


async def testModeration(self, ctx, user_input: str, response: str = "") -> bool:
    """
    Moderates user input and response content based on predefined categories.

    Args:
        self: The object instance calling this method.
        ctx: The context object, containing information about the user, channel, and server.
        user_input (str): The input message from the user.
        response (str, optional): The response message generated by the bot. Defaults to an empty string.

    Returns:
        bool: True if the message should be censored or restricted, False otherwise.
    """

    # returns if it should not censor
    censor = self.bot.data["servers"][ctx.server].get("censorship", True)
    if not (censor or (censor and not ctx.nsfw)):
        return False

    temp_response = removeSymbols(response)
    data = f"{user_input}\n{temp_response}"
    status, metrics = await self.bot.ai.getModeration(data)
    color = discord.Color.from_rgb(0, 0, 0)

    categories = metrics["results"][0]["category_scores"]

    # hate/threatening
    if categories["hate"] > 0.1 or categories["hate/threatening"] > 0.1:
        embed = newEmbed("I will not tolerate hate messages. Please do not ask this again.",
                         color=color)
        await ctx.send(embed, reference=True)
        return True

    # self-harm
    if categories["self-harm"] > 0.1:
        if not ctx.nsfw:
            embed = newEmbed("Content related to self-harm can only be used in NSFW channels.",
                             color=color)
            await ctx.send(embed, reference=True)
            return True

    # sexual
    if categories["sexual"] > 0.1:
        if not ctx.nsfw:
            embed = newEmbed("Sexual content is only allowed in NSFW channels.",
                             color=color)
            await ctx.send(embed, reference=True)
            return True


    # sexual/minors
    if categories["sexual/minors"] > 0.1:
        if not ctx.nsfw:
            embed = newEmbed("Sexual content related to children will never be tolerated.\n"
                             "Please do not ask this again",
                             color=color)
            await ctx.send(embed, reference=True)
            return True

    # violence
    if categories["violence"] > 0.3 or categories["violence/graphic"] > 0.3:
        if not ctx.nsfw:
            embed = newEmbed("Violent content is only allowed in NSFW channels.",
                             color=color)
            await ctx.send(embed, reference=True)
            return True

    # checks for bad words
    if not ctx.nsfw:
        text = user_input.lower()
        for i in ",. *()-_+'<>/?!`":
            text = text.replace(i, "")
        for word in self.bot.badwords:
            if word in text:
                embed = newEmbed("My answer contains a forbidden word. Try again in an NSFW channel.",
                                 color=color)
                await ctx.send(embed, reference=True)
                return True

    return False
